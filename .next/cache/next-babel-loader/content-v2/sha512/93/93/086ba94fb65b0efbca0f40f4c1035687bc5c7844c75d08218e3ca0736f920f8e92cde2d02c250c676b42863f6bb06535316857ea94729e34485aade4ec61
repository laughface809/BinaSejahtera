{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ubuntux44baseserver/belajar/binasejahtera/front/pages/success.js\";\nimport { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport { useRouter } from 'next/router';\nimport { API_URL } from '../utils/urls';\nimport Link from 'next/link';\n\nconst useOrder = session_id => {\n  const {\n    0: order,\n    1: setOrder\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(null);\n  const {\n    getToken,\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (user) {\n      const fetchOrder = async () => {\n        setLoading(true);\n\n        try {\n          const token = await getToken();\n          const res = await fetch(`${API_URL}/orders/confirm`, {\n            method: 'POST',\n            body: JSON.stringify({\n              checkout_session: session_id\n            }),\n            headers: {\n              'Content-type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          const data = await res.json();\n          setOrder(data);\n        } catch (err) {\n          setOrder(null);\n        }\n\n        setLoading(false);\n      };\n\n      fetchOrder();\n    }\n  }, [user]);\n  return {\n    order,\n    loading\n  };\n};\n\nexport default function Success() {\n  const router = useRouter();\n  const {\n    session_id\n  } = router.query;\n  const {\n    order,\n    loading\n  } = useOrder(session_id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hold on!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"We're confirming your purchase!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this), order && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your order was processed successfully! \", /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/account\",\n        children: \"View Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 59\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/ubuntux44baseserver/belajar/binasejahtera/front/pages/success.js"],"names":["useState","useEffect","useContext","AuthContext","useRouter","API_URL","Link","useOrder","session_id","order","setOrder","loading","setLoading","getToken","user","fetchOrder","token","res","fetch","method","body","JSON","stringify","checkout_session","headers","data","json","err","Success","router","query"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,QAAQ,GAAIC,UAAD,IAAgB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM;AAAEa,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBZ,UAAU,CAACC,WAAD,CAArC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGa,IAAH,EAAQ;AACJ,YAAMC,UAAU,GAAG,YAAY;AAC3BH,QAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,YAAG;AACC,gBAAMI,KAAK,GAAG,MAAMH,QAAQ,EAA5B;AACA,gBAAMI,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEb,OAAQ,iBAAZ,EAA8B;AACjDc,YAAAA,MAAM,EAAE,MADyC;AAEjDC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,cAAAA,gBAAgB,EAAEf;AAApB,aAAf,CAF2C;AAGjDgB,YAAAA,OAAO,EAAE;AACL,8BAAgB,kBADX;AAEL,+BAAkB,UAASR,KAAM;AAF5B;AAHwC,WAA9B,CAAvB;AASA,gBAAMS,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAAnB;AACAhB,UAAAA,QAAQ,CAACe,IAAD,CAAR;AACH,SAbD,CAaE,OAAOE,GAAP,EAAW;AACTjB,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAnBD;;AAoBAG,MAAAA,UAAU;AACb;AAEJ,GAzBQ,EAyBN,CAACD,IAAD,CAzBM,CAAT;AA2BA,SAAO;AAAEL,IAAAA,KAAF;AAASE,IAAAA;AAAT,GAAP;AACH,CAlCD;;AAoCA,eAAe,SAASiB,OAAT,GAAkB;AAE7B,QAAMC,MAAM,GAAGzB,SAAS,EAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAiBqB,MAAM,CAACC,KAA9B;AACA,QAAM;AAAErB,IAAAA,KAAF;AAASE,IAAAA;AAAT,MAAqBJ,QAAQ,CAACC,UAAD,CAAnC;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMG,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFjB,EAGMF,KAAK,iBACH;AAAA,yEAA0C,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH","sourcesContent":["import { useState, useEffect, useContext } from 'react'\nimport AuthContext from '../context/AuthContext'\nimport { useRouter } from 'next/router'\nimport { API_URL } from '../utils/urls'\n\nimport Link from 'next/link'\n\nconst useOrder = (session_id) => {\n    const [order, setOrder] = useState(null)\n    const [loading, setLoading] = useState(null)\n\n    const { getToken, user } = useContext(AuthContext);\n\n    useEffect(() => {\n        if(user){\n            const fetchOrder = async () => {\n                setLoading(true)\n                try{\n                    const token = await getToken()\n                    const res = await fetch(`${API_URL}/orders/confirm`, {\n                        method: 'POST',\n                        body: JSON.stringify({ checkout_session: session_id }),\n                        headers: {\n                            'Content-type': 'application/json',\n                            'Authorization': `Bearer ${token}`\n                        }\n                    })\n\n                    const data = await res.json()\n                    setOrder(data)\n                } catch (err){\n                    setOrder(null)\n                }\n                setLoading(false)\n            }\n            fetchOrder()\n        }\n\n    }, [user])\n\n    return { order, loading }\n}\n\nexport default function Success(){\n\n    const router = useRouter()\n    const { session_id } = router.query\n    const { order, loading } = useOrder(session_id)\n\n    return (\n        <div>\n            <h2>Hold on!</h2>\n            { loading && <p>We're confirming your purchase!</p>}\n            { order && (\n                <p>Your order was processed successfully! <Link href=\"/account\">View Orders</Link></p>\n            )}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}