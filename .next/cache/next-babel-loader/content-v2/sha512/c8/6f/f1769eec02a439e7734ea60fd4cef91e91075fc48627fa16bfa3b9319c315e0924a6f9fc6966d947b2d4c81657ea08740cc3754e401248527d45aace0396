{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ubuntux44baseserver/belajar/binasejahtera/front/components/BuyButton.js\";\nimport { useContext } from 'react';\nimport { useRouter } from \"next/router\";\nimport { loadStripe } from \"@stripe/stripe-js/\";\nimport styles from '../styles/BuyButton.module.css';\nimport AuthContext from \"../context/AuthContext\";\nimport { STRIPE_PK, API_URL } from \"../utils/urls\";\nconst stripePromise = loadStripe(STRIPE_PK);\nexport default function BuyButton({\n  product\n}) {\n  const {\n    user,\n    getToken\n  } = useContext(AuthContext);\n  const router = useRouter();\n\n  const redirectToLogin = () => {\n    router.push('/login');\n  };\n\n  const handleBuy = async () => {\n    const stripe = await stripePromise;\n    const token = await getToken();\n    const res = await fetch(`${API_URL}/orders`, {\n      method: 'POST',\n      body: JSON.stringify({\n        product\n      }),\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const session = await res.json();\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!user && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.buy,\n      onClick: redirectToLogin,\n      children: \"Login to Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), user && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.buy,\n      onClick: handleBuy,\n      children: \"BUY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/ubuntux44baseserver/belajar/binasejahtera/front/components/BuyButton.js"],"names":["useContext","useRouter","loadStripe","styles","AuthContext","STRIPE_PK","API_URL","stripePromise","BuyButton","product","user","getToken","router","redirectToLogin","push","handleBuy","stripe","token","res","fetch","method","body","JSON","stringify","headers","session","json","result","redirectToCheckout","sessionId","id","buy"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AAEA,MAAMC,aAAa,GAAGL,UAAU,CAACG,SAAD,CAAhC;AAEA,eAAe,SAASG,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA6B;AAExC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBX,UAAU,CAACI,WAAD,CAArC;AACA,QAAMQ,MAAM,GAAGX,SAAS,EAAxB;;AAEA,QAAMY,eAAe,GAAG,MAAM;AAC1BD,IAAAA,MAAM,CAACE,IAAP,CAAY,QAAZ;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,YAAY;AAC1B,UAAMC,MAAM,GAAG,MAAMT,aAArB;AACA,UAAMU,KAAK,GAAG,MAAMN,QAAQ,EAA5B;AAEA,UAAMO,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEb,OAAQ,SAAZ,EAAqB;AACxCc,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,QAAAA;AAAF,OAAf,CAFkC;AAGxCe,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,UAASP,KAAM;AAF5B;AAH+B,KAArB,CAAvB;AAQA,UAAMQ,OAAO,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAtB;AAEA,UAAMC,MAAM,GAAG,MAAMX,MAAM,CAACY,kBAAP,CAA0B;AAC3CC,MAAAA,SAAS,EAAEJ,OAAO,CAACK;AADwB,KAA1B,CAArB;AAGH,GAjBD;;AAmBA,sBACI;AAAA,eACK,CAACpB,IAAD,iBACD;AACI,MAAA,SAAS,EAAEP,MAAM,CAAC4B,GADtB;AAEI,MAAA,OAAO,EAAElB,eAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EASKH,IAAI,iBACL;AACI,MAAA,SAAS,EAAEP,MAAM,CAAC4B,GADtB;AAEI,MAAA,OAAO,EAAEhB,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,kBADJ;AAoBH","sourcesContent":["import { useContext } from 'react'\nimport { useRouter } from \"next/router\";\nimport { loadStripe } from \"@stripe/stripe-js/\";\n\nimport styles from '../styles/BuyButton.module.css'\nimport AuthContext from \"../context/AuthContext\";\nimport { STRIPE_PK, API_URL } from \"../utils/urls\";\n\nconst stripePromise = loadStripe(STRIPE_PK)\n\nexport default function BuyButton({product}){\n\n    const { user, getToken } = useContext(AuthContext)\n    const router = useRouter()\n\n    const redirectToLogin = () => {\n        router.push('/login')\n    }\n\n    const handleBuy = async () => {\n        const stripe = await stripePromise\n        const token = await getToken()\n\n        const res = await fetch(`${API_URL}/orders`,{\n            method: 'POST',\n            body: JSON.stringify({ product }),\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        const session = await res.json()\n\n        const result = await stripe.redirectToCheckout({\n            sessionId: session.id\n        })\n    }\n\n    return(\n        <>\n            {!user&&\n            <button\n                className={styles.buy}\n                onClick={redirectToLogin}\n            >\n                Login to Buy\n            </button>\n            }\n            {user &&\n            <button\n                className={styles.buy}\n                onClick={handleBuy}\n            >\n                BUY\n            </button>\n            }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}