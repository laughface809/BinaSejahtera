{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/ubuntux44baseserver/belajar/binasejahtera/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntux44baseserver/belajar/binasejahtera/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/ubuntux44baseserver/belajar/binasejahtera/front/pages/success.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { API_URL } from \"../utils/urls\";\n\nvar useOrder = function useOrder(session_id) {\n  _s();\n\n  var _useState = useState(null),\n      order = _useState[0],\n      setOrder = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    var fetchOrder = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch(\"\".concat(API_URL / orders / confirm), {\n                  method: 'POST',\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    checkout_session: session_id\n                  })\n                });\n\n              case 4:\n                res = _context.sent;\n                _context.next = 7;\n                return res.json();\n\n              case 7:\n                data = _context.sent;\n                setOrder(data);\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                setOrder(null);\n\n              case 14:\n                setLoading(false);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 11]]);\n      }));\n\n      return function fetchOrder() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchOrder();\n  }, [session_id]);\n  return {\n    order: order,\n    loading: loading\n  };\n};\n\n_s(useOrder, \"y1nj2tn63/TJ+P8jAW7/xrvFBlc=\");\n\nexport default function Success() {\n  _s2();\n\n  var router = useRouter();\n  var session_id = router.query.session_id;\n\n  var _useOrder = useOrder(session_id),\n      order = _useOrder.order,\n      loading = _useOrder.loading;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Terima kasih atas pembayarannya!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Terima Kasih atas pembayaran\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Success, \"Rtsk9bB9GRWLrIW6bdmHZC45B8Q=\", false, function () {\n  return [useRouter, useOrder];\n});\n\n_c = Success;\n\nvar _c;\n\n$RefreshReg$(_c, \"Success\");","map":{"version":3,"sources":["/home/ubuntux44baseserver/belajar/binasejahtera/front/pages/success.js"],"names":["useState","useEffect","useRouter","Head","API_URL","useOrder","session_id","order","setOrder","loading","setLoading","fetchOrder","fetch","orders","confirm","method","headers","body","JSON","stringify","checkout_session","res","json","data","Success","router","query"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAgB;AAAA;;AAAA,kBACHN,QAAQ,CAAC,IAAD,CADL;AAAA,MACtBO,KADsB;AAAA,MACfC,QADe;;AAAA,mBAECR,QAAQ,CAAC,KAAD,CAFT;AAAA,MAEtBS,OAFsB;AAAA,MAEbC,UAFa;;AAI7BT,EAAAA,SAAS,CAAC,YAAK;AACX,QAAMU,UAAU;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACfD,gBAAAA,UAAU,CAAC,IAAD,CAAV;AADe;AAAA;AAAA,uBAGOE,KAAK,WAAIR,OAAO,GAACS,MAAR,GAAeC,OAAnB,GAA8B;AACjDC,kBAAAA,MAAM,EAAE,MADyC;AAEjDC,kBAAAA,OAAO,EAAE;AACL,oCAAgB;AADX,mBAFwC;AAKjDC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,oBAAAA,gBAAgB,EAAEd;AAAnB,mBAAf;AAL2C,iBAA9B,CAHZ;;AAAA;AAGLe,gBAAAA,GAHK;AAAA;AAAA,uBAUQA,GAAG,CAACC,IAAJ,EAVR;;AAAA;AAULC,gBAAAA,IAVK;AAWXf,gBAAAA,QAAQ,CAACe,IAAD,CAAR;AAXW;AAAA;;AAAA;AAAA;AAAA;AAcdf,gBAAAA,QAAQ,CAAC,IAAD,CAAR;;AAdc;AAgBfE,gBAAAA,UAAU,CAAC,KAAD,CAAV;;AAhBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVC,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAkBAA,IAAAA,UAAU;AACb,GApBQ,EAoBN,CAACL,UAAD,CApBM,CAAT;AAsBA,SAAO;AAAEC,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,OAAO,EAAPA;AAAT,GAAP;AACH,CA3BD;;GAAMJ,Q;;AA6BN,eAAe,SAASmB,OAAT,GAAkB;AAAA;;AAE7B,MAAMC,MAAM,GAAGvB,SAAS,EAAxB;AAF6B,MAGrBI,UAHqB,GAGNmB,MAAM,CAACC,KAHD,CAGrBpB,UAHqB;;AAAA,kBAKFD,QAAQ,CAACC,UAAD,CALN;AAAA,MAKrBC,KALqB,aAKrBA,KALqB;AAAA,MAKdE,OALc,aAKdA,OALc;;AAO7B,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;IAhBuBe,O;UAELtB,S,EAGYG,Q;;;KALPmB,O","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Head from 'next/head'\nimport { API_URL } from \"../utils/urls\";\n\nconst useOrder = (session_id) => {\n    const [order, setOrder] = useState(null)\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() =>{\n        const fetchOrder = async () =>{\n            setLoading(true)\n            try {\n                const res = await fetch(`${API_URL/orders/confirm}`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/json'\n                    },\n                    body: JSON.stringify({checkout_session: session_id})\n                })\n                const data = await res.json()\n                setOrder(data)\n            }\n            catch (err){\n             setOrder(null)\n            }\n            setLoading(false)\n        }\n        fetchOrder()\n    }, [session_id])\n\n    return { order, loading }\n}\n\nexport default function Success(){\n\n    const router = useRouter()\n    const { session_id } = router.query\n\n    const { order, loading } = useOrder(session_id)\n\n    return(\n        <div>\n            <Head>\n            <title>Terima kasih atas pembayarannya!</title>\n            <meta name=\"description\" content=\"Terima Kasih atas pembayaran\"/>\n            </Head>\n            <h2>Success</h2>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}