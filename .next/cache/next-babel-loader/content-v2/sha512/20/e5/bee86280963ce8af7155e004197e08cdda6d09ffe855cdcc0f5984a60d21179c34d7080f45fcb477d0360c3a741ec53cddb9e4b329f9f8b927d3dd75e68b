{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ubuntux44baseserver/belajar/binasejahtera/front/pages/success.js\";\nimport { useState, useEffect } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { API_URL } from \"../utils/urls\";\n\nconst useOrder = session_id => {\n  const {\n    0: order,\n    1: setOrder\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    const fetchOrder = async () => {\n      setLoading(true);\n\n      try {\n        const res = await fetch(`${API_URL / orders / confirm}`, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            checkout_session: session_id\n          })\n        });\n        const data = await res.json();\n        setOrder(data);\n      } catch (err) {\n        setOrder(null);\n      }\n\n      setLoading(false);\n    };\n\n    fetchOrder();\n  }, [session_id]);\n  return {\n    order,\n    loading\n  };\n};\n\nexport default function Success() {\n  const router = useRouter();\n  const {\n    session_id\n  } = router.query;\n  const {\n    order,\n    loading\n  } = useOrder(session_id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Terima kasih atas pembayarannya!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Terima Kasih atas pembayaran\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Success!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this), order && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Order sudah dikonfirmasi dengan nomor order: \", order.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/ubuntux44baseserver/belajar/binasejahtera/front/pages/success.js"],"names":["useState","useEffect","AuthContext","useRouter","Head","API_URL","useOrder","session_id","order","setOrder","loading","setLoading","fetchOrder","res","fetch","orders","confirm","method","headers","body","JSON","stringify","checkout_session","data","json","err","Success","router","query","id"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAIC,UAAD,IAAgB;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMW,UAAU,GAAG,YAAW;AAC1BD,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACA,cAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAO,GAACU,MAAR,GAAeC,OAAQ,EAA3B,EAA8B;AACjDC,UAAAA,MAAM,EAAE,MADyC;AAEjDC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX,WAFwC;AAKjDC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,YAAAA,gBAAgB,EAAEf;AAAnB,WAAf;AAL2C,SAA9B,CAAvB;AAOA,cAAMgB,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAJ,EAAnB;AACAf,QAAAA,QAAQ,CAACc,IAAD,CAAR;AACH,OAVD,CAWA,OAAOE,GAAP,EAAW;AACVhB,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACA;;AACDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAjBD;;AAkBAC,IAAAA,UAAU;AACb,GApBQ,EAoBN,CAACL,UAAD,CApBM,CAAT;AAsBA,SAAO;AAAEC,IAAAA,KAAF;AAASE,IAAAA;AAAT,GAAP;AACH,CA3BD;;AA6BA,eAAe,SAASgB,OAAT,GAAkB;AAE7B,QAAMC,MAAM,GAAGxB,SAAS,EAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAiBoB,MAAM,CAACC,KAA9B;AAEA,QAAM;AAAEpB,IAAAA,KAAF;AAASE,IAAAA;AAAT,MAAqBJ,QAAQ,CAACC,UAAD,CAAnC;AAEA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAOKG,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPhB,EAQKF,KAAK,iBAAI;AAAA,kEAAiDA,KAAK,CAACqB,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,YARd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH","sourcesContent":["import { useState, useEffect } from 'react'\nimport AuthContext from '../context/AuthContext'\nimport { useRouter } from 'next/router'\nimport Head from 'next/head'\nimport { API_URL } from \"../utils/urls\";\n\nconst useOrder = (session_id) => {\n    const [order, setOrder] = useState(null)\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() =>{\n        const fetchOrder = async () =>{\n            setLoading(true)\n            try {\n                const res = await fetch(`${API_URL/orders/confirm}`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/json'\n                    },\n                    body: JSON.stringify({checkout_session: session_id})\n                })\n                const data = await res.json()\n                setOrder(data)\n            }\n            catch (err){\n             setOrder(null)\n            }\n            setLoading(false)\n        }\n        fetchOrder()\n    }, [session_id])\n\n    return { order, loading }\n}\n\nexport default function Success(){\n\n    const router = useRouter()\n    const { session_id } = router.query\n\n    const { order, loading } = useOrder(session_id)\n\n    return(\n        <div>\n            <Head>\n            <title>Terima kasih atas pembayarannya!</title>\n            <meta name=\"description\" content=\"Terima Kasih atas pembayaran\"/>\n            </Head>\n\n            <h2>Success!</h2>\n            {loading && <p>Loading</p>}\n            {order && <p>Order sudah dikonfirmasi dengan nomor order: {order.id}</p>}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}