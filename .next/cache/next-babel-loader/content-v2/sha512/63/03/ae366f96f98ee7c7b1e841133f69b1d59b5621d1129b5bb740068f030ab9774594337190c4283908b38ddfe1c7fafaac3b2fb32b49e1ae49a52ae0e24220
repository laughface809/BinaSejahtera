{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/ubuntux44baseserver/belajar/binasejahtera/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntux44baseserver/belajar/binasejahtera/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/ubuntux44baseserver/belajar/binasejahtera/front/pages/success.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport { useRouter } from 'next/router';\nimport { API_URL } from '../utils/urls';\nimport Link from 'next/link';\n\nvar useOrder = function useOrder(session_id) {\n  _s();\n\n  var _useState = useState(null),\n      order = _useState[0],\n      setOrder = _useState[1];\n\n  var _useState2 = useState(null),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      getToken = _useContext.getToken,\n      user = _useContext.user;\n\n  useEffect(function () {\n    if (user) {\n      var fetchOrder = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var token, res, data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setLoading(true);\n                  _context.prev = 1;\n                  _context.next = 4;\n                  return getToken();\n\n                case 4:\n                  token = _context.sent;\n                  _context.next = 7;\n                  return fetch(\"\".concat(API_URL, \"/orders/confirm\"), {\n                    method: 'POST',\n                    body: JSON.stringify({\n                      checkout_session: session_id\n                    }),\n                    headers: {\n                      'Content-type': 'application/json',\n                      'Authorization': \"Bearer \".concat(token)\n                    }\n                  });\n\n                case 7:\n                  res = _context.sent;\n                  _context.next = 10;\n                  return res.json();\n\n                case 10:\n                  data = _context.sent;\n                  setOrder(data);\n                  _context.next = 17;\n                  break;\n\n                case 14:\n                  _context.prev = 14;\n                  _context.t0 = _context[\"catch\"](1);\n                  setOrder(null);\n\n                case 17:\n                  setLoading(false);\n\n                case 18:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[1, 14]]);\n        }));\n\n        return function fetchOrder() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      fetchOrder();\n    }\n  }, [user]);\n  return {\n    order: order,\n    loading: loading\n  };\n};\n\n_s(useOrder, \"ahmw+8eeh2M+nBtNI+zcp4FDMU8=\");\n\nexport default function Success() {\n  _s2();\n\n  var router = useRouter();\n  var session_id = router.query.session_id;\n\n  var _useOrder = useOrder(session_id),\n      order = _useOrder.order,\n      loading = _useOrder.loading;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Terima kasih\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Kami telah konfirmasi pembayaranmu!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your order was processed successfully! \", /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/account\",\n        children: \"View Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 59\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Success, \"Rtsk9bB9GRWLrIW6bdmHZC45B8Q=\", false, function () {\n  return [useRouter, useOrder];\n});\n\n_c = Success;\n\nvar _c;\n\n$RefreshReg$(_c, \"Success\");","map":{"version":3,"sources":["/home/ubuntux44baseserver/belajar/binasejahtera/front/pages/success.js"],"names":["useState","useEffect","useContext","AuthContext","useRouter","API_URL","Link","useOrder","session_id","order","setOrder","loading","setLoading","getToken","user","fetchOrder","token","fetch","method","body","JSON","stringify","checkout_session","headers","res","json","data","Success","router","query"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAgB;AAAA;;AAAA,kBACHR,QAAQ,CAAC,IAAD,CADL;AAAA,MACtBS,KADsB;AAAA,MACfC,QADe;;AAAA,mBAECV,QAAQ,CAAC,IAAD,CAFT;AAAA,MAEtBW,OAFsB;AAAA,MAEbC,UAFa;;AAAA,oBAIFV,UAAU,CAACC,WAAD,CAJR;AAAA,MAIrBU,QAJqB,eAIrBA,QAJqB;AAAA,MAIXC,IAJW,eAIXA,IAJW;;AAM7Bb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGa,IAAH,EAAQ;AACJ,UAAMC,UAAU;AAAA,4EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACfH,kBAAAA,UAAU,CAAC,IAAD,CAAV;AADe;AAAA;AAAA,yBAGSC,QAAQ,EAHjB;;AAAA;AAGLG,kBAAAA,KAHK;AAAA;AAAA,yBAIOC,KAAK,WAAIZ,OAAJ,sBAA8B;AACjDa,oBAAAA,MAAM,EAAE,MADyC;AAEjDC,oBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,sBAAAA,gBAAgB,EAAEd;AAApB,qBAAf,CAF2C;AAGjDe,oBAAAA,OAAO,EAAE;AACL,sCAAgB,kBADX;AAEL,wDAA2BP,KAA3B;AAFK;AAHwC,mBAA9B,CAJZ;;AAAA;AAILQ,kBAAAA,GAJK;AAAA;AAAA,yBAaQA,GAAG,CAACC,IAAJ,EAbR;;AAAA;AAaLC,kBAAAA,IAbK;AAcXhB,kBAAAA,QAAQ,CAACgB,IAAD,CAAR;AAdW;AAAA;;AAAA;AAAA;AAAA;AAgBXhB,kBAAAA,QAAQ,CAAC,IAAD,CAAR;;AAhBW;AAkBfE,kBAAAA,UAAU,CAAC,KAAD,CAAV;;AAlBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAVG,UAAU;AAAA;AAAA;AAAA,SAAhB;;AAoBAA,MAAAA,UAAU;AACb;AAEJ,GAzBQ,EAyBN,CAACD,IAAD,CAzBM,CAAT;AA2BA,SAAO;AAAEL,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,OAAO,EAAPA;AAAT,GAAP;AACH,CAlCD;;GAAMJ,Q;;AAoCN,eAAe,SAASoB,OAAT,GAAkB;AAAA;;AAE7B,MAAMC,MAAM,GAAGxB,SAAS,EAAxB;AAF6B,MAGrBI,UAHqB,GAGNoB,MAAM,CAACC,KAHD,CAGrBrB,UAHqB;;AAAA,kBAIFD,QAAQ,CAACC,UAAD,CAJN;AAAA,MAIrBC,KAJqB,aAIrBA,KAJqB;AAAA,MAIdE,OAJc,aAIdA,OAJc;;AAM7B,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMA,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFjB,eAGQ;AAAA,yEAA0C,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IAbuBgB,O;UAELvB,S,EAEYG,Q;;;KAJPoB,O","sourcesContent":["import { useState, useEffect, useContext } from 'react'\nimport AuthContext from '../context/AuthContext'\nimport { useRouter } from 'next/router'\nimport { API_URL } from '../utils/urls'\n\nimport Link from 'next/link'\n\nconst useOrder = (session_id) => {\n    const [order, setOrder] = useState(null)\n    const [loading, setLoading] = useState(null)\n\n    const { getToken, user } = useContext(AuthContext);\n\n    useEffect(() => {\n        if(user){\n            const fetchOrder = async () => {\n                setLoading(true)\n                try{\n                    const token = await getToken()\n                    const res = await fetch(`${API_URL}/orders/confirm`, {\n                        method: 'POST',\n                        body: JSON.stringify({ checkout_session: session_id }),\n                        headers: {\n                            'Content-type': 'application/json',\n                            'Authorization': `Bearer ${token}`\n                        }\n                    })\n\n                    const data = await res.json()\n                    setOrder(data)\n                } catch (err){\n                    setOrder(null)\n                }\n                setLoading(false)\n            }\n            fetchOrder()\n        }\n\n    }, [user])\n\n    return { order, loading }\n}\n\nexport default function Success(){\n\n    const router = useRouter()\n    const { session_id } = router.query\n    const { order, loading } = useOrder(session_id)\n\n    return (\n        <div>\n            <h2>Terima kasih</h2>\n            { loading && <p>Kami telah konfirmasi pembayaranmu!</p>}\n                <p>Your order was processed successfully! <Link href=\"/account\">View Orders</Link></p>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}