{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/ubuntux44baseserver/belajar/binasejahtera/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntux44baseserver/belajar/binasejahtera/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/ubuntux44baseserver/belajar/binasejahtera/front/context/AuthContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nimport { Magic } from 'magic-sdk';\nimport { MAGIC_PUBLIC_KEY } from \"../utils/urls\";\nvar AuthContext = /*#__PURE__*/createContext();\nvar magic;\nexport var AuthProvider = function AuthProvider(props) {\n  _s();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var router = useRouter();\n  /**\n   * Add email user\n   * @param {string} email\n   */\n\n  var loginUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return magic.auth.loginWithMagicLink({\n                email: email\n              });\n\n            case 3:\n              setUser({\n                email: email\n              });\n              router.push('/');\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              setUser(null);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function loginUser(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   *Set user null\n   */\n\n\n  var logoutUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return magic.user.logout();\n\n            case 3:\n              setUser(null);\n              router.push('/');\n              _context2.next = 9;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function logoutUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var checkUserLoggedIn = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var isLoggedIn, _yield$magic$user$get, email, token;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return magic.user.isLoggedIn();\n\n            case 3:\n              isLoggedIn = _context3.sent;\n\n              if (!isLoggedIn) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 7;\n              return magic.user.getMetadata();\n\n            case 7:\n              _yield$magic$user$get = _context3.sent;\n              email = _yield$magic$user$get.email;\n              setUser({\n                email: email\n              }); //test consolo log\n\n              _context3.next = 12;\n              return getToken();\n\n            case 12:\n              token = _context3.sent;\n              console.log(\"checkUserLoggedIn token\", token);\n\n            case 14:\n              _context3.next = 18;\n              break;\n\n            case 16:\n              _context3.prev = 16;\n              _context3.t0 = _context3[\"catch\"](0);\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 16]]);\n    }));\n\n    return function checkUserLoggedIn() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  /**\n   * retriev the magic issues bearer token\n   * this allow user to make otentkasi request\n   */\n\n\n  var getToken = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var token;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return magic.user.getIdToken();\n\n            case 3:\n              token = _context4.sent;\n              return _context4.abrupt(\"return\", token);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function getToken() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    magic = new Magic(MAGIC_PUBLIC_KEY);\n    checkUserLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: user,\n      loginUser: loginUser,\n      logoutUser: logoutUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AuthProvider, \"ocZTZ8m72GkfgAfkTHk7sW+OJyw=\", false, function () {\n  return [useRouter];\n});\n\n_c = AuthProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/ubuntux44baseserver/belajar/binasejahtera/front/context/AuthContext.js"],"names":["createContext","useState","useEffect","useRouter","Magic","MAGIC_PUBLIC_KEY","AuthContext","magic","AuthProvider","props","user","setUser","router","loginUser","email","auth","loginWithMagicLink","push","logoutUser","logout","checkUserLoggedIn","isLoggedIn","getMetadata","getToken","token","console","log","getIdToken","children"],"mappings":"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","sourcesContent":["import {createContext, useState, useEffect} from 'react'\nimport {useRouter} from \"next/router\";\nimport {Magic} from 'magic-sdk'\nimport {MAGIC_PUBLIC_KEY} from \"../utils/urls\";\n\nconst AuthContext = createContext()\n\nlet magic\nexport const AuthProvider = (props) => {\n\n    const [user, setUser] = useState(null)\n    const router = useRouter()\n\n    /**\n     * Add email user\n     * @param {string} email\n     */\n    const loginUser = async (email) =>{\n        try {\n            await magic.auth.loginWithMagicLink({email})\n            setUser({email})\n            router.push('/')\n        }\n        catch (err){\n            setUser(null)\n        }\n    }\n\n    /**\n     *Set user null\n     */\n    const logoutUser = async()=>{\n        try {\n            await magic.user.logout()\n            setUser(null)\n            router.push('/')\n        }\n        catch (err){\n\n        }\n    }\n\n    const checkUserLoggedIn = async () =>{\n        try {\n            const isLoggedIn = await magic.user.isLoggedIn()\n            if(isLoggedIn){\n                const {email} = await magic.user.getMetadata()\n                setUser({email})\n\n                //test consolo log\n                const token = await  getToken()\n                console.log(\"checkUserLoggedIn token\", token)\n            }\n        }\n        catch (err){\n\n        }\n    }\n\n    /**\n     * retriev the magic issues bearer token\n     * this allow user to make otentkasi request\n     */\n\n    const getToken = async () => {\n        try {\n            const token = await magic.user.getIdToken()\n            return token\n        }\n        catch (err){\n\n        }\n    }\n\n    useEffect(() => {\n        magic = new Magic(MAGIC_PUBLIC_KEY)\n        checkUserLoggedIn()\n        }, []\n    )\n\n    return(\n        <AuthContext.Provider value={{ user, loginUser, logoutUser}}>\n            {props.children}\n        </AuthContext.Provider>\n\n    )\n}\n\nexport default AuthContext\n"]},"metadata":{},"sourceType":"module"}