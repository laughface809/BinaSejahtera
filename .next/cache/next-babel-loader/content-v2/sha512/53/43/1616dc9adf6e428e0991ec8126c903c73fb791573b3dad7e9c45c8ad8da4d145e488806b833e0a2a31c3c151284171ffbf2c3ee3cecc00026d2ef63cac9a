{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ubuntux44baseserver/belajar/binasejahtera/front/context/AuthContext.js\";\nimport { createContext, useState, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nimport { Magic } from 'magic-sdk';\nimport { MAGIC_PUBLIC_KEY } from \"../utils/urls\";\nconst AuthContext = /*#__PURE__*/createContext();\nlet magic;\nexport const AuthProvider = props => {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const router = useRouter();\n  /**\n   * Add email user\n   * @param {string} email\n   */\n\n  const loginUser = async email => {\n    try {\n      await magic.auth.loginWithMagicLink({\n        email\n      });\n      setUser({\n        email\n      });\n      router.push('/');\n    } catch (err) {\n      setUser(null);\n    }\n  };\n  /**\n   *Set user null\n   */\n\n\n  const logoutUser = async () => {\n    try {\n      await magic.user.logout();\n      setUser(null);\n      router.push('/');\n    } catch (err) {}\n  };\n\n  const checkUserLoggedIn = async () => {\n    try {\n      const isLoggedIn = await magic.user.isLoggedIn();\n\n      if (isLoggedIn) {\n        const {\n          email\n        } = await magic.user.getMetadata();\n        setUser({\n          email\n        });\n      }\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    magic = new Magic(MAGIC_PUBLIC_KEY);\n    checkUserLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loginUser,\n      logoutUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\nexport default AuthContext;","map":{"version":3,"sources":["/home/ubuntux44baseserver/belajar/binasejahtera/front/context/AuthContext.js"],"names":["createContext","useState","useEffect","useRouter","Magic","MAGIC_PUBLIC_KEY","AuthContext","magic","AuthProvider","props","user","setUser","router","loginUser","email","auth","loginWithMagicLink","push","err","logoutUser","logout","checkUserLoggedIn","isLoggedIn","getMetadata","children"],"mappings":";;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,KAAR,QAAoB,WAApB;AACA,SAAQC,gBAAR,QAA+B,eAA/B;AAEA,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;AAEA,IAAIO,KAAJ;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAEnC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMW,MAAM,GAAGT,SAAS,EAAxB;AAEA;AACJ;AACA;AACA;;AACI,QAAMU,SAAS,GAAG,MAAOC,KAAP,IAAgB;AAC9B,QAAI;AACA,YAAMP,KAAK,CAACQ,IAAN,CAAWC,kBAAX,CAA8B;AAACF,QAAAA;AAAD,OAA9B,CAAN;AACAH,MAAAA,OAAO,CAAC;AAACG,QAAAA;AAAD,OAAD,CAAP;AACAF,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH,KAJD,CAKA,OAAOC,GAAP,EAAW;AACPP,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,GATD;AAWA;AACJ;AACA;;;AACI,QAAMQ,UAAU,GAAG,YAAS;AACxB,QAAI;AACA,YAAMZ,KAAK,CAACG,IAAN,CAAWU,MAAX,EAAN;AACAT,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH,KAJD,CAKA,OAAOC,GAAP,EAAW,CAEV;AACJ,GATD;;AAWA,QAAMG,iBAAiB,GAAG,YAAW;AACjC,QAAI;AACA,YAAMC,UAAU,GAAG,MAAMf,KAAK,CAACG,IAAN,CAAWY,UAAX,EAAzB;;AACA,UAAGA,UAAH,EAAc;AACV,cAAM;AAACR,UAAAA;AAAD,YAAU,MAAMP,KAAK,CAACG,IAAN,CAAWa,WAAX,EAAtB;AACAZ,QAAAA,OAAO,CAAC;AAACG,UAAAA;AAAD,SAAD,CAAP;AACH;AACJ,KAND,CAOA,OAAOI,GAAP,EAAW,CAEV;AACJ,GAXD;;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,GAAG,IAAIH,KAAJ,CAAUC,gBAAV,CAAR;AACAgB,IAAAA,iBAAiB;AAChB,GAHI,EAGF,EAHE,CAAT;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEX,MAAAA,IAAF;AAAQG,MAAAA,SAAR;AAAmBM,MAAAA;AAAnB,KAA7B;AAAA,cACKV,KAAK,CAACe;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA3DM;AA6DP,eAAelB,WAAf","sourcesContent":["import {createContext, useState, useEffect} from 'react'\nimport {useRouter} from \"next/router\";\nimport {Magic} from 'magic-sdk'\nimport {MAGIC_PUBLIC_KEY} from \"../utils/urls\";\n\nconst AuthContext = createContext()\n\nlet magic\nexport const AuthProvider = (props) => {\n\n    const [user, setUser] = useState(null)\n    const router = useRouter()\n\n    /**\n     * Add email user\n     * @param {string} email\n     */\n    const loginUser = async (email) =>{\n        try {\n            await magic.auth.loginWithMagicLink({email})\n            setUser({email})\n            router.push('/')\n        }\n        catch (err){\n            setUser(null)\n        }\n    }\n\n    /**\n     *Set user null\n     */\n    const logoutUser = async()=>{\n        try {\n            await magic.user.logout()\n            setUser(null)\n            router.push('/')\n        }\n        catch (err){\n\n        }\n    }\n\n    const checkUserLoggedIn = async () =>{\n        try {\n            const isLoggedIn = await magic.user.isLoggedIn()\n            if(isLoggedIn){\n                const {email} = await magic.user.getMetadata()\n                setUser({email})\n            }\n        }\n        catch (err){\n\n        }\n    }\n\n    useEffect(() => {\n        magic = new Magic(MAGIC_PUBLIC_KEY)\n        checkUserLoggedIn()\n        }, []\n    )\n\n    return(\n        <AuthContext.Provider value={{ user, loginUser, logoutUser}}>\n            {props.children}\n        </AuthContext.Provider>\n\n    )\n}\n\nexport default AuthContext\n"]},"metadata":{},"sourceType":"module"}